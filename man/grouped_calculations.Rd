% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grouped_calculations.R
\name{grouped_calculations}
\alias{grouped_calculations}
\alias{mutate_groups}
\alias{summarise_groups}
\alias{summarize_groups}
\alias{transmute_groups}
\alias{arrange_groups}
\title{Grouped Calculations}
\usage{
mutate_groups(.data, .groups, ...)

summarise_groups(.data, .groups, ...)

summarize_groups(.data, .groups, ...)

transmute_groups(.data, .groups, ...)

arrange_groups(.data, .groups, ...)
}
\arguments{
\item{.data}{A \code{tbl_spark} or a \code{data.frame}.}

\item{.groups}{\code{character(n)}. The columns to group by.}

\item{...}{Arguments to pass onto the respective function.}
}
\value{
A \code{tbl_spark} or a \code{data.frame} depending on the input, \code{.data}.
}
\description{
Each of these functions first group the data using \code{\link[dplyr:group_by]{dplyr::group_by()}} and then:
\itemize{
\item \code{mutate_groups()}: Apply calculations using \code{\link[dplyr:mutate]{dplyr::mutate()}}.
\item \code{transmute_groups()}: Apply calculations using \code{\link[dplyr:mutate]{dplyr::transmute()}}.
\item \code{summarise_groups()}: Summarise the data by applying calculations using \code{\link[dplyr:summarise]{dplyr::summarise()}}.
\item \code{arrange_groups()}: Order the data using \code{\link[dplyr:arrange]{dplyr::arrange()}} with \code{.by_group = TRUE}.
}

The respective output is ungrouped.
}
\examples{
mtcars \%>\%
  mutate_groups(.groups = c("am", "cyl"), avgMpg = mean(mpg))
mtcars \%>\%
  summarise_groups(.groups = c("am", "cyl"), avgMpg = mean(mpg))

# Additional arguments can still be passed to the dplyr functions
mtcars \%>\%
  mutate_groups(.groups = "am", avgMpg = mean(mpg), .before = mpg)

}
