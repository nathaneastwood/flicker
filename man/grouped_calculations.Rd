% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grouped_calculations.R
\name{grouped_calculations}
\alias{grouped_calculations}
\alias{mutate_groups}
\alias{summarise_groups}
\title{Grouped Calculations}
\usage{
mutate_groups(x, groups, calculations)

summarise_groups(x, groups, calculations)
}
\arguments{
\item{x}{A Spark \code{DataFrame} or a \code{data.frame}. The data to mutate or summarise.}

\item{groups}{\code{character(n)}. The columns to group by.}

\item{calculations}{\code{formula()} or a \code{list()} of \code{formula()}s. The calculations to apply where the LHS of the formula
is the name of the new column to create and the RHS is the calculation to apply.}
}
\value{
A Spark \code{DataFrame} or a \code{data.frame} depending on the input, \code{x}.
}
\description{
\itemize{
\item \code{mutate_groups()}: Group the data, \code{x}, using \code{\link[dplyr:group_by]{dplyr::group_by()}} then apply \code{calculations} using
\code{\link[dplyr:mutate]{dplyr::mutate()}}.
\item \code{summarise_groups()}: Group the data, \code{x}, using \code{\link[dplyr:group_by]{dplyr::group_by()}} then summarise it by applying a
\code{calculations} using \code{\link[dplyr:summarise]{dplyr::summarise()}}.
}
}
\examples{
mtcars \%>\%
  mutate_groups(
    groups = c("am", "cyl"),
    calculations = avgMpg ~ mean(mpg)
  )
mtcars \%>\%
  summarise_groups(
    groups = c("am", "cyl"),
    calculations = avgMpg ~ mean(mpg)
  )

# You can pass lists of formulas
mtcars \%>\%
  mutate_groups(
    groups = c("am", "cyl"),
    calculations = list(
      avgMpg ~ mean(mpg, na.rm = TRUE),
      avgDisp ~ mean(disp, na.rm = TRUE)
    )
  )

}
