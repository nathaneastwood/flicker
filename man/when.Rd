% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/when.R
\name{when}
\alias{when}
\alias{arrange_when}
\alias{distinct_when}
\alias{filter_when}
\alias{group_by_when}
\alias{mutate_when}
\alias{select_when}
\alias{summarise_when}
\alias{transmute_when}
\title{Evaluate When}
\usage{
arrange_when(.data, .cond, ...)

distinct_when(.data, .cond, ...)

filter_when(.data, .cond, ...)

group_by_when(.data, .cond, ...)

mutate_when(.data, .cond, ...)

select_when(.data, .cond, ...)

summarise_when(.data, .cond, ...)

transmute_when(.data, .cond, ...)
}
\arguments{
\item{.data}{A \code{tbl_spark} or a \code{data.frame}.}

\item{.cond}{A condition that will evaluate to a \code{logical(1)}. When it evaluates to \code{TRUE}, arguments passed to
\code{...} will be evaluated in the context of \code{.data}.}

\item{...}{Additional parameters to pass to the {dplyr} function.}
}
\value{
A \code{tbl_spark} or a \code{data.frame} depending on the input, \code{.data}.
}
\description{
Evaluate conditional expressions and if it evaluates to \code{TRUE}, execute the function call's logic. Note that these
functions are subtly different from the scoped variants of {dplyr} functions in that they can evaluate any condition.
If the condition evaluates to \code{FALSE}, these functions will return the original data.
}
\examples{
# Let's say we have another object and based on this object we
# want to perform some conditional logic
previous_result <- 42

# We can evaluate expressions in the same way as the dplyr function.
# If the evaluation is FALSE, it will return the original data.
mtcars \%>\%
  mutate_when(previous_result < 42, mpg * 2)
# And if the condition if TRUE, it will evaluate
mtcars \%>\%
  mutate_when(previous_result >= 42, mpg * 2)

# We can evaluate multiple expressions
mtcars \%>\%
  mutate_when(previous_result >= 42, mpg2 = mpg * 2, mpg4 = mpg * 2)

# We can still use functionality such as tidy-select
mtcars \%>\%
  select_when(previous_result >= 42, Cylinders = cyl, everything())

# We can also evaluate logic that is conditional on .data
mtcars \%>\%
  filter_when("mpg" \%in\% colnames(.), cyl == 4)

}
